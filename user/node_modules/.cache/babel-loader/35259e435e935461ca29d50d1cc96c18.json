{"ast":null,"code":"import _objectSpread from \"/media/mark/mark_nakachon/cafeHungamaFrontEnd/user/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/media/mark/mark_nakachon/cafeHungamaFrontEnd/user/src/Context.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst myContext = React.createContext();\n\nclass ContextProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelectChange = (selectedRowKeys, selectedRows) => {\n      //  console.log(\"selectedRowKeys changed: \", selectedRowKeys, selectedRows);\n      this.setState({\n        selectedRowKeys,\n        selectedData: selectedRows //price: selectedRows.reduce((acc, curr) => acc + curr.price, 0)\n\n      });\n    };\n\n    this.signup = userInfo => {\n      return axios.post(\"localhost:5000/user/signup\", userInfo).then(response => {\n        //const { user, token } = response.data\n        //localStorage.setItem(\"token\", token);\n        //localStorage.setItem(\"user\", JSON.stringify(user));\n\n        /*this.setState({\n            user,\n            token\n        });\n        // forward the response, just in case\n        // it's needed down the promise chain\n        return response;*/\n        console.log(response);\n      });\n    };\n\n    this.login = credentials => {\n      return axios.post(\"localhost:5000/user/login\", credentials).then(response => {\n        /*  const { token, user } = response.data;\n          localStorage.setItem(\"token\", token)\n          localStorage.setItem(\"user\", JSON.stringify(user))\n          this.setState({\n              user,\n              token\n          });\n          */\n\n        /*// Don't forget to get this newly-logged-in user's todos!\n        this.getTodos();\n        return response;*/\n        console.log(response);\n      });\n    };\n\n    this.logout = () => {\n      localStorage.removeItem(\"user\");\n      localStorage.removeItem(\"token\");\n      this.setState({\n        user: {},\n        token: \"\"\n      });\n    };\n\n    this.state = {\n      location: '',\n      date: '',\n      eventType: '',\n      venues: '',\n      bookedSlots: [],\n      selectedRowKeys: [],\n      // Check here to configure the default column,\n      selectedRows: [],\n      selectedData: [],\n      user: JSON.parse(localStorage.getItem(\"user\")) || {},\n      token: localStorage.getItem(\"token\") || \"\"\n    };\n    this.handleButtonClick = this.handleButtonClick.bind(this);\n    this.handleLocationClick = this.handleLocationClick.bind(this);\n    this.handleEventTypeClick = this.handleEventTypeClick.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.updateBookings = this.updateBookings.bind(this);\n  }\n\n  componentDidMount() {\n    //if(this.state.location==='' && this.state.date==='' && this.state.eventType===''){\n    fetch(\"https://cafehungama.herokuapp.com/user/venues/all\").then(response => response.json()).then(data => {\n      this.setState({\n        venues: data\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleButtonClick(e) {\n    //message.info('Click on left button.');\n    //console.log('searching data');\n\n    /*console.log(this.state.location,this.state.eventType\n        ,this.state.date);*/\n    var data = {\n      location: this.state.location,\n      eventType: this.state.eventType,\n      date: this.state.date\n    };\n    fetch(\"https://cafehungama.herokuapp.com/user/venues/search/\", {\n      method: 'POST',\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    }).then(response => response.json()).then(data => {\n      this.setState({\n        venues: data.filteredVenues\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  handleLocationClick(e) {\n    // message.info('Click on menu item.');\n    this.setState({\n      location: e.key\n    });\n  }\n\n  onChange(date, dateString) {\n    //  console.log(date,dateString);\n    this.setState({\n      date: dateString\n    });\n  }\n\n  handleEventTypeClick(e) {\n    //console.log('click event',e);\n    this.setState({\n      eventType: e.key\n    });\n  }\n\n  updateBookings(selectedRowKeys) {\n    console.log(selectedRowKeys);\n    /*this.setState({\n        bookedSlots:bookings\n    })*/\n\n    /* this.setState({\n         bookedSlots:bookings\n     })*/\n  }\n\n  render() {\n    return React.createElement(myContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleButtonClick: this.handleButtonClick,\n        handleLocationClick: this.handleLocationClick,\n        handleEventTypeClick: this.handleEventTypeClick,\n        onChange: this.onChange,\n        updateBookings: this.updateBookings,\n        onSelectChange: this.onSelectChange,\n        signup: this.signup,\n        login: this.login\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ContextConsumer = myContext.Consumer;\nexport { ContextConsumer, ContextProvider };","map":{"version":3,"sources":["/media/mark/mark_nakachon/cafeHungamaFrontEnd/user/src/Context.js"],"names":["React","Component","axios","myContext","createContext","ContextProvider","constructor","props","onSelectChange","selectedRowKeys","selectedRows","setState","selectedData","signup","userInfo","post","then","response","console","log","login","credentials","logout","localStorage","removeItem","user","token","state","location","date","eventType","venues","bookedSlots","JSON","parse","getItem","handleButtonClick","bind","handleLocationClick","handleEventTypeClick","onChange","updateBookings","componentDidMount","fetch","json","data","catch","err","e","method","headers","body","stringify","filteredVenues","key","dateString","render","children","ContextConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nconst myContext = React.createContext();\n\nclass ContextProvider extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            location:'',\n            date:'',\n            eventType:'',\n            venues:'',\n            bookedSlots:[],\n            selectedRowKeys: [], // Check here to configure the default column,\n            selectedRows: [],\n            selectedData:[],\n            user: JSON.parse(localStorage.getItem(\"user\")) || {},\n            token:localStorage.getItem(\"token\") || \"\"\n         }\n         this.handleButtonClick = this.handleButtonClick.bind(this);\n         this.handleLocationClick = this.handleLocationClick.bind(this);\n         this.handleEventTypeClick = this.handleEventTypeClick.bind(this);\n         this.onChange = this.onChange.bind(this);\n         this.updateBookings = this.updateBookings.bind(this);\n\n    }\n    componentDidMount(){\n        //if(this.state.location==='' && this.state.date==='' && this.state.eventType===''){\n        fetch(`https://cafehungama.herokuapp.com/user/venues/all`)\n        .then(response=>response.json())\n        .then(data=>{\n            this.setState({\n                venues:data\n            })\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n    }\n\n\n     handleButtonClick(e) {\n        //message.info('Click on left button.');\n        //console.log('searching data');\n        /*console.log(this.state.location,this.state.eventType\n            ,this.state.date);*/\n\n        var data = {\n            location:this.state.location,\n            eventType:this.state.eventType,\n            date:this.state.date,\n        }\n        fetch(`https://cafehungama.herokuapp.com/user/venues/search/`,{\n            method:'POST',\n            headers:{\n                \"Content-Type\": \"application/json\"\n            },\n            body:JSON.stringify(data)\n        })\n        .then(response=>response.json())\n        .then(data=>{\n            this.setState({\n                venues:data.filteredVenues\n            })\n        })\n        .catch(err=>{\n            console.log(err);\n        })\n\n    }\n\n\n     handleLocationClick(e) {\n        // message.info('Click on menu item.');\n        this.setState({\n            location:e.key\n        })\n     }\n\n     onChange(date, dateString) {\n       //  console.log(date,dateString);\n        this.setState({\n            date:dateString\n        })\n    }\n    handleEventTypeClick(e){\n        //console.log('click event',e);\n        this.setState({\n            eventType:e.key\n        })\n    }\n    updateBookings(selectedRowKeys){\n        console.log(selectedRowKeys);\n        /*this.setState({\n            bookedSlots:bookings\n        })*/\n       /* this.setState({\n            bookedSlots:bookings\n        })*/\n    }\n\n    onSelectChange = (selectedRowKeys, selectedRows) => {\n        //  console.log(\"selectedRowKeys changed: \", selectedRowKeys, selectedRows);\n        this.setState({\n          selectedRowKeys,\n          selectedData: selectedRows,\n          //price: selectedRows.reduce((acc, curr) => acc + curr.price, 0)\n        });\n    }\n\n    signup = (userInfo) => {\n        return axios.post(\"localhost:5000/user/signup\", userInfo)\n            .then(response => {\n                //const { user, token } = response.data\n                //localStorage.setItem(\"token\", token);\n                //localStorage.setItem(\"user\", JSON.stringify(user));\n                /*this.setState({\n                    user,\n                    token\n                });\n                // forward the response, just in case\n                // it's needed down the promise chain\n                return response;*/\n                console.log(response);\n            })\n    }\n\n    login = (credentials) => {\n        return axios.post(\"localhost:5000/user/login\", credentials)\n            .then(response => {\n              /*  const { token, user } = response.data;\n                localStorage.setItem(\"token\", token)\n                localStorage.setItem(\"user\", JSON.stringify(user))\n                this.setState({\n                    user,\n                    token\n                });\n                */\n                /*// Don't forget to get this newly-logged-in user's todos!\n                this.getTodos();\n                return response;*/\n                console.log(response);\n            })\n    }\n\n    logout = ()=>{\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"token\");\n        this.setState({\n            user: {},\n            token: \"\"\n        })\n    }\n    render() {\n        return (\n            <myContext.Provider value={{\n                ...this.state,\n                handleButtonClick:this.handleButtonClick,\n                handleLocationClick:this.handleLocationClick,\n                handleEventTypeClick:this.handleEventTypeClick,\n                onChange:this.onChange,\n                updateBookings:this.updateBookings,\n                onSelectChange:this.onSelectChange,\n                signup:this.signup,\n                login:this.login\n\n            }}>\n                {this.props.children}\n            </myContext.Provider>\n         );\n    }\n}\n\nconst ContextConsumer = myContext.Consumer;\n\nexport {ContextConsumer,ContextProvider}"]},"metadata":{},"sourceType":"module"}