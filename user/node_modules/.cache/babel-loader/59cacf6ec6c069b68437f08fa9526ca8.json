{"ast":null,"code":"var _jsxFileName = \"/media/mark/mark_nakachon/cafeHungamaFrontEnd/user/src/BookTicket/BookSlots.js\";\nimport React from \"react\";\nimport moment from \"moment\";\nimport { Table, DatePicker, Button, Row, Col, Card } from \"antd\";\nimport VenueDetails from \"./VenueDetails\";\nimport NearestVenues from \"./NearestVenues\";\nimport \"../index.css\";\nimport Loader from 'react-loader-spinner';\nimport { Link } from 'react-router-dom';\nimport { ContextConsumer } from '../Context';\nconst availability = [\"Booked\", \"Normal\", \"NA\", \"Selected\"];\n/*for (let i = 0; i < 24; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `${i} - ${i + 1}`,\r\n    price: Math.floor(Math.random() * 500 + 100),\r\n    address: `${i}/${i + 10}`,\r\n    status: availability[Math.floor(Math.random() * 4)]\r\n  });\r\n}*/\n\nclass BookSlots extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectNumberOfSeats: 1,\n      price: 0,\n      data: [],\n      columns: [{\n        title: \"Time Slot\",\n        dataIndex: \"name\"\n      }, {\n        title: \"Price\",\n        dataIndex: \"price\"\n      }, {\n        title: \" Seats Filled\",\n        dataIndex: \"address\"\n      }, {\n        title: \" Status\",\n        dataIndex: \"status\"\n      }]\n    };\n\n    this.changePrice = () => {\n      this.setState({\n        price: Math.max(...this.state.selectedData.map(sel => sel.price))\n      });\n    };\n\n    this.disabledDate = current => {\n      // Can not select days before today and after 15 days\n      return current < moment().startOf(\"day\") || current > moment().add(14, \"days\");\n    };\n\n    this.decrement = () => {\n      if (this.state.selectNumberOfSeats > 0) this.setState({\n        selectNumberOfSeats: this.state.selectNumberOfSeats - 1\n      });\n    };\n\n    this.increment = () => {\n      this.setState({\n        selectNumberOfSeats: this.state.selectNumberOfSeats + 1\n      });\n    };\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    fetch(\"https://cafehungama.herokuapp.com/user/venues/\".concat(id)).then(response => response.json()).then(s => {\n      const slot_tables = s[0].slot_price_table;\n      const data = [];\n      slot_tables[0].map(slots => {\n        data.push({\n          key: slots.time_slot,\n          price: slots.ticket_price,\n          name: slots.time_slot,\n          status: slots.ticket_sold\n        });\n        this.setState({\n          data: data\n        });\n      });\n      console.log(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  /*onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    //  console.log(\"selectedRowKeys changed: \", selectedRowKeys, selectedRows);\r\n      this.setState({\r\n      selectedRowKeys,\r\n      selectedData: selectedRows,\r\n      price: selectedRows.reduce((acc, curr) => acc + curr.price, 0)\r\n    });\r\n  \r\n    // console.log(...selectedRows.map(sel => sel.price));\r\n  };*/\n\n  /* getPrice = record => {\r\n    this.setState({\r\n      price: record.price\r\n    });\r\n  };*/\n\n\n  render() {\n    console.log(this.state.price);\n    const _this$state = this.state,\n          selectedRowKeys = _this$state.selectedRowKeys,\n          columns = _this$state.columns;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n      getCheckboxProps: record => ({\n        disabled: record.status === \"NA\" // Column configuration not to be checked\n\n      })\n    };\n    const data = this.state.data;\n    console.log(data);\n    return React.createElement(ContextConsumer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, value => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: {\n          span: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(Col, {\n        lg: {\n          span: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(VenueDetails, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: {\n          span: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        className: \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Note : \"), \"You Can Select Multiple Seats\", \" \"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }), React.createElement(DatePicker, {\n        size: \"large\",\n        disabledDate: this.disabledDate,\n        defaultValue: moment(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), \"\\xA0\\xA0\\xA0\", React.createElement(Button, {\n        onClick: this.decrement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \" - \"), \"\\xA0\\xA0\", React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.selectNumberOfSeats,\n        id: \"selectNumberOfSeats\",\n        onChange: e => {\n          if (e.target.value) this.setState({\n            selectNumberOfSeats: parseInt(e.target.value)\n          });else this.setState({\n            selectNumberOfSeats: \"\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), \" \", \"\\xA0\\xA0\", React.createElement(Button, {\n        onClick: this.increment,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \" + \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: {\n          span: 13\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, data.length === 0 ? React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(Loader, {\n        type: \"ThreeDots\",\n        color: \"#000000\",\n        height: 200,\n        width: 200,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })) : React.createElement(Table, {\n        rowSelection: {\n          selectedRowKeys: value.selectedRowKeys,\n          onChange: value.onSelectChange,\n          getCheckboxProps: record => ({\n            disabled: record.status === \"NA\" // Column configuration not to be checked\n\n          })\n        },\n        columns: columns,\n        dataSource: data,\n        pagination: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: {\n          span: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }), React.createElement(Col, {\n        lg: {\n          span: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(NearestVenues, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: {\n          span: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(Table\n      /* rowSelection={rowSelection1} */\n      , {\n        columns: columns,\n        dataSource: value.selectedData,\n        pagination: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: {\n          span: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(Col, {\n        lg: {\n          span: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.changePrice,\n        type: \"primary\",\n        shape: \"round\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Select 1 slot of all the slots\")), React.createElement(Col, {\n        lg: {\n          span: 4\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }), React.createElement(Col, {\n        lg: {\n          span: 3\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"When minimum criteria reaches, your slot will get finalised\"))), React.createElement(\"span\", {\n        className: \"note\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, \"Total Price: \", this.state.selectNumberOfSeats * this.state.price), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: {\n          offset: 6\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        size: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/checkout\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Book Tickets and Pay\"))))), React.createElement(Col, {\n        lg: {\n          span: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223\n        },\n        __self: this\n      })), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }));\n    });\n  }\n\n}\n\nexport default BookSlots;","map":{"version":3,"sources":["/media/mark/mark_nakachon/cafeHungamaFrontEnd/user/src/BookTicket/BookSlots.js"],"names":["React","moment","Table","DatePicker","Button","Row","Col","Card","VenueDetails","NearestVenues","Loader","Link","ContextConsumer","availability","BookSlots","Component","state","selectNumberOfSeats","price","data","columns","title","dataIndex","changePrice","setState","Math","max","selectedData","map","sel","disabledDate","current","startOf","add","decrement","increment","componentDidMount","id","props","match","params","fetch","then","response","json","s","slot_tables","slot_price_table","slots","push","key","time_slot","ticket_price","name","status","ticket_sold","console","log","catch","err","render","selectedRowKeys","rowSelection","onChange","onSelectChange","getCheckboxProps","record","disabled","value","span","e","target","parseInt","length","textAlign","offset"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport moment from \"moment\";\r\nimport { Table, DatePicker, Button, Row, Col, Card } from \"antd\";\r\nimport VenueDetails from \"./VenueDetails\";\r\nimport NearestVenues from \"./NearestVenues\";\r\nimport \"../index.css\";\r\nimport Loader from 'react-loader-spinner';\r\nimport {Link} from 'react-router-dom';\r\nimport {ContextConsumer} from '../Context';\r\nconst availability = [\"Booked\", \"Normal\", \"NA\", \"Selected\"];\r\n\r\n/*for (let i = 0; i < 24; i++) {\r\n  data.push({\r\n    key: i,\r\n    name: `${i} - ${i + 1}`,\r\n    price: Math.floor(Math.random() * 500 + 100),\r\n    address: `${i}/${i + 10}`,\r\n    status: availability[Math.floor(Math.random() * 4)]\r\n  });\r\n}*/\r\n\r\nclass BookSlots extends React.Component {\r\n  state = {\r\n    selectNumberOfSeats: 1,\r\n    price: 0,\r\n    data:[],\r\n    columns: [\r\n      {\r\n        title: \"Time Slot\",\r\n        dataIndex: \"name\"\r\n      },\r\n      {\r\n        title: \"Price\",\r\n        dataIndex: \"price\"\r\n      },\r\n      {\r\n        title: \" Seats Filled\",\r\n        dataIndex: \"address\"\r\n      },\r\n      {\r\n        title: \" Status\",\r\n        dataIndex: \"status\"\r\n      }\r\n    ]\r\n  };\r\n\r\n\r\n  componentDidMount(){\r\n    const {id} = this.props.match.params;\r\n    fetch(`https://cafehungama.herokuapp.com/user/venues/${id}`)\r\n    .then(response=>response.json())\r\n    .then(s=>{\r\n       const slot_tables = s[0].slot_price_table;\r\n       const data =[];\r\n        slot_tables[0].map(slots=>{\r\n          data.push({\r\n            key:slots.time_slot,\r\n            price:slots.ticket_price,\r\n            name:slots.time_slot,\r\n            status:slots.ticket_sold\r\n\r\n          })\r\n          this.setState({data:data})\r\n        })\r\n        console.log(data);\r\n    })\r\n    .catch(err=>{\r\n        console.log(err);\r\n    })\r\n  }\r\n\r\n  /*onSelectChange = (selectedRowKeys, selectedRows) => {\r\n    //  console.log(\"selectedRowKeys changed: \", selectedRowKeys, selectedRows);\r\n\r\n    this.setState({\r\n      selectedRowKeys,\r\n      selectedData: selectedRows,\r\n      price: selectedRows.reduce((acc, curr) => acc + curr.price, 0)\r\n    });\r\n\r\n\r\n    // console.log(...selectedRows.map(sel => sel.price));\r\n  };*/\r\n\r\n  /* getPrice = record => {\r\n    this.setState({\r\n      price: record.price\r\n    });\r\n  };*/\r\n  changePrice = () => {\r\n    this.setState({\r\n      price: Math.max(...this.state.selectedData.map(sel => sel.price))\r\n    });\r\n  };\r\n  disabledDate = current => {\r\n    // Can not select days before today and after 15 days\r\n    return (\r\n      current < moment().startOf(\"day\") || current > moment().add(14, \"days\")\r\n    );\r\n  };\r\n  decrement = () => {\r\n    if (this.state.selectNumberOfSeats > 0)\r\n      this.setState({\r\n        selectNumberOfSeats: this.state.selectNumberOfSeats - 1\r\n      });\r\n  };\r\n  increment = () => {\r\n    this.setState({ selectNumberOfSeats: this.state.selectNumberOfSeats + 1 });\r\n  };\r\n  render() {\r\n    console.log(this.state.price);\r\n\r\n    const { selectedRowKeys, columns } = this.state;\r\n    const rowSelection = {\r\n      selectedRowKeys,\r\n      onChange: this.onSelectChange,\r\n      getCheckboxProps: record => ({\r\n        disabled: record.status === \"NA\" // Column configuration not to be checked\r\n      })\r\n    };\r\n    const {data} = this.state;\r\n    console.log(data);\r\n    return (\r\n      <ContextConsumer>\r\n        {\r\n          (value)=>{\r\n            return ( <div>\r\n              <Row>\r\n                <Col lg={{ span: 2 }} />\r\n                <Col lg={{ span: 20 }}>\r\n                  <VenueDetails />\r\n                  <Row>\r\n                    <Col lg={{ span: 13 }}>\r\n                      <h2 className=\"note\">\r\n                        <b>Note : </b>You Can Select Multiple Seats{\" \"}\r\n                      </h2>\r\n                    </Col>\r\n                  </Row>\r\n                  <br />\r\n                  <DatePicker\r\n                    size=\"large\"\r\n                    disabledDate={this.disabledDate}\r\n                    defaultValue={moment()}\r\n                  />\r\n                  &nbsp;&nbsp;&nbsp;\r\n                  <Button onClick={this.decrement}> - </Button>\r\n                  &nbsp;&nbsp;\r\n                  <input\r\n                    type=\"text\"\r\n                    value={this.state.selectNumberOfSeats}\r\n                    id=\"selectNumberOfSeats\"\r\n                    onChange={e => {\r\n                      if (e.target.value)\r\n                        this.setState({\r\n                          selectNumberOfSeats: parseInt(e.target.value)\r\n                        });\r\n                      else\r\n                        this.setState({\r\n                          selectNumberOfSeats: \"\"\r\n                        });\r\n                    }}\r\n                  />{\" \"}\r\n                  &nbsp;&nbsp;\r\n                  <Button onClick={this.increment}> + </Button>\r\n                  <br />\r\n                  <Row>\r\n                    <Col lg={{ span: 13 }}>\r\n                      {data.length === 0 ?( <div style={{textAlign:'center'}}><Loader type=\"ThreeDots\" color=\"#000000\" height={200} width={200} /></div>):(\r\n                        <Table\r\n                        rowSelection={{\r\n                          selectedRowKeys:value.selectedRowKeys,\r\n                          onChange:value.onSelectChange,\r\n                          getCheckboxProps: record => ({\r\n                            disabled: record.status === \"NA\" // Column configuration not to be checked\r\n                          })}}\r\n                        columns={columns}\r\n                        dataSource={data}\r\n                        pagination={false}\r\n                      ></Table>\r\n                      )}\r\n                    </Col>\r\n                    <Col lg={{ span: 1 }} />\r\n                    <Col lg={{ span: 10 }}>\r\n                      <NearestVenues />\r\n                    </Col>\r\n                  </Row>\r\n                  <br />\r\n                  <Row>\r\n                    <Col lg={{ span: 10 }}>\r\n                      <Table\r\n                        /* rowSelection={rowSelection1} */\r\n                        columns={columns}\r\n                        dataSource={value.selectedData}\r\n                        pagination={false}\r\n                      />\r\n                    </Col>\r\n                    <Col lg={{ span: 1 }} />\r\n                    <Col lg={{ span: 2 }}>\r\n                      <Button onClick={this.changePrice} type=\"primary\" shape=\"round\">\r\n                        Select 1 slot of all the slots\r\n                      </Button>\r\n                    </Col>\r\n                    <Col lg={{ span: 4 }} />\r\n                    <Col lg={{ span: 3 }}>\r\n                      <Card>\r\n                        When minimum criteria reaches, your slot will get finalised\r\n                      </Card>\r\n                    </Col>\r\n                  </Row>\r\n                  <span className=\"note\">\r\n                    Total Price: {this.state.selectNumberOfSeats * this.state.price}\r\n                  </span>\r\n                  <br />\r\n                  <Row>\r\n                    <Col lg={{ offset: 6 }}>\r\n                      <Button type=\"primary\" size=\"large\">\r\n                        <Link to=\"/checkout\">Book Tickets and Pay</Link>\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n\r\n                <Col lg={{ span: 2 }} />\r\n              </Row>\r\n              <br />\r\n              <br />\r\n            </div>)\r\n          }\r\n        }\r\n      </ContextConsumer>\r\n    );\r\n    }\r\n  }\r\n\r\nexport default BookSlots;\r\n"]},"metadata":{},"sourceType":"module"}